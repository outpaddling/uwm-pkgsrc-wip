
PKG_DEVELOPER=yes in ${PREFIX}/etc/mk.conf (/etc/mk.conf on NetBSD)

Check for CVEs on this version of the software

Makefile:

    Code version into DISTNAME and use PKGVERSION_NOREV elsewhere
	Derive PKGNAME from ${DISTNAME:S/x/y/}

    LICENSE can be grouped with COMMENT, unlike FreeBSD
    
    USE_TOOLS+=perl[:run] if any perl scripts intalled

    Generally prefer VAR+= over VAR= for anything likely to have
    += lines added, unlike FreeBSD project
    
    Use VAR+= instead of line continuations
    
    VAR+= for GCC_REQD, CGLAGS, etc.

    Do not use FETCH_USING in Makefile

    Use MASTER_SITE_SOURCEFORGE, MASTER_SITE_GITHUB, etc. if possible
	See mk/fetch/github for packages downloading from Github

    Remove GITHUB_PROJECT if it matches PKGBASE.
    
    Use REPLACE_PERL, REPLACE_PYTHON, etc.
	* REPLACE_BASH can replace /bin/sh

    USE_LANGUAGES=c is the default and can be omitted if only C is used
	c++11, c++14, etc instead of GCC_REQD

    URLs should not have /../
    
    INSTALLATION_DIRS instead of AUTO_MKDIRS or MKDIR

    If update changes the binary package, bump PKGREVISION
    
    Eliminate unneeded deps
    
    Pthreads
	.include "../../mk/pthread.buildlink3.mk"
	PTHREAD_AUTO_VARS
	
	Check for mk files for other common deps
    
    Final check: Walk through line-by-line

Patching:

    Use BSD_INSTALL_*_DIR to create directories
    
    pkgconfigdir= $(exec_prefix)/lib/pkgconfig
    
    Build should respect pkgsrc env
	CC, CXX, FC, LD, CFLAGS, CXXFLAGS, FFLAGS, LDFLAGS
	Disable addition of non-portable and extraneous compile options, e.g.
	    Overaggressive optimizations
	    -g3
	pkgsrc user should be able to control these, not upstream
	Upstream build system should only add flags that are necessary

    Inspect every patch file
    
    Inspect installed files (e.g. files/*) for hard-coded paths

PLIST:

    Remove unneeded pkgdir entries
    
    Inspect carefully

DESCR:

    More than one line.

    fmt -w 79

buildlink3.mk:

    Create only if installing libraries or headers
    
    Update BUILDLINK_API_DEPENDS only if necessary.  See pkgsrc guide.

Testing:

    Make pkglint -Wall and pkglint -e run clean

    Test with PKGSRC_USE_RELRO in mk.conf
	Should work if build system respects LDFLAGS
    
    Test build in an empty tree
    
    Inspect compiler output for non-portable flags

    Run verifypc to check dependencies
    
    Check all installed scripts for empty shebang lines

    Test on NetBSD
    
    Test on other supported platforms (CentOS, Darwin, ...)
    
Remove TODO and other extraneous files

Add to pkgsrc-wip

Email ?? to request a review

Remove poudriere logs if present

After commit:

Switch dependencies in other wip ports from /usr/wip to \${PORTSDIR}

If maintaining source

    Tag this version of source and create next one

    Update wip ports if present

else

    1)  Send patches through proper channels.
    
    2)  Contact author(s):

    People often assume the only supported platforms are those listed on
    the software's home page and that they should follow the (usually
    inadequate) instructions on the developer's site to install the software.
    A simple note about using a package manager and a link to the ports site
    can do a lot to raise awareness of the advantages of FreeBSD ports and
    other package managers.

    Send the following message AFTER THE PORT IS COMMITTED and then
    update FreeBSD-citing.
	
============================================================================

FYI:

[Software name] has been committed to the pkgsrc package collection.
It might be helpful to users if you could post a message like
the following on your website:

Regards,

    [Your name]

[Software name] can be installed on most POSIX platforms using the pkgsrc
package manager.

Binary packages are available for Mac OS X, NetBSD, RHEL/CentOS,
and SmartOS. To install via the binary package, simply run:

    pkgin install [put package name here]

This will very quickly install a binary using only highly-portable
optimizations, much like apt-get, yum, etc.

Pkgsrc packages can just as easily be built and installed from source,
although this will take more time:

    cd /usr/pkgsrc/category/[put port name here]
    [b]make install

Building from source allows installing on virtually any POSIX platform,
installing to a different prefix, compiling with additional options, and in
some cases, building with non-default options such as different compilers
or dependencies, e.g.:

    [b]make CFLAGS=-march=native install

We, the [software name ] developers, do not directly support installation
via pkgsrc. To report any issues, please submit a PR at:

    https://www.netbsd.org/support/send-pr.html

For more information, visit https://www.pkgsrc.org.
